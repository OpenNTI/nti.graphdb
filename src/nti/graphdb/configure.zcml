<!-- -*- mode: nxml -*- -->
<configure	xmlns="http://namespaces.zope.org/zope"
			xmlns:i18n="http://namespaces.zope.org/i18n"
			xmlns:zcml="http://namespaces.zope.org/zcml"
			xmlns:gdb="http://nextthought.com/ntp/graphdb">

	<include package="zope.component" file="meta.zcml" />
	<include package="zope.security" file="meta.zcml" />
	<include package="zope.component" />
	<include package="zope.security" />

	<include package="nti.asynchronous" />

	<!-- Database -->
	<include package=".neo4j" file="configure.zcml" />

	<!-- Primary Keys -->
	<include package="." file="configure_unique.zcml" />

	<!-- Labels -->
	<include package="." file="configure_label.zcml" />

	<!-- Properties -->
	<include package="." file="configure_properties.zcml" />

	<!-- Entities -->
	<subscriber handler=".entities._entity_added" />
	<subscriber handler=".entities._entity_removed" />

	<utility component=".entities" provides=".interfaces.IObjectProcessor" name="entities"/>

	<!-- Created -->
	<subscriber handler=".created._object_created" />
	<subscriber handler=".created._object_removed" />
	<subscriber handler=".created._object_modified" />
	<subscriber handler=".created._message_posted_to_room" />

	<utility component=".created" provides=".interfaces.IObjectProcessor" name="created"/>

	<!-- Connections -->
	<subscriber handler=".connections._friendslist_added" />
	<subscriber handler=".connections._friendslist_deleted" />
	<subscriber handler=".connections._friendslist_modified" />
	<subscriber handler=".connections._stop_following_event" />
	<subscriber handler=".connections._start_following_event" />
	<subscriber handler=".connections._stop_dynamic_membership_event" />
	<subscriber handler=".connections._start_dynamic_membership_event" />

	<utility component=".connections" provides=".interfaces.IObjectProcessor" name="connections"/>
	
	<!-- Flagging -->
	<subscriber handler=".flagging._object_flagged" />
	<subscriber handler=".flagging._object_unflagged" />
	
	<utility component=".flagging" provides=".interfaces.IObjectProcessor" name="flagging"/>
	
	<!-- Rating -->
	<subscriber handler=".ratings._object_rated" />

	<utility component=".ratings" provides=".interfaces.IObjectProcessor" name="ratings"/>

	<!-- Sharing -->
	<subscriber handler=".sharing._shareable_added" />
	<subscriber handler=".sharing._shareable_modified" />

	<utility component=".sharing" provides=".interfaces.IObjectProcessor" name="sharing"/>

	<!-- Tagging -->
	<subscriber handler=".tagging._user_tagged_content_added" />
	<subscriber handler=".tagging._user_tagged_content_removed" />
	<subscriber handler=".tagging._user_tagged_content_modified" />	

	<utility component=".tagging" provides=".interfaces.IObjectProcessor" name="tagging"/>

	<!-- Threadables -->
	<subscriber handler=".threadables._threadable_added" />
	<subscriber handler=".threadables._threadable_removed" />
	<subscriber handler=".threadables._threadable_modified" />

	<utility component=".threadables" provides=".interfaces.IObjectProcessor" name="threadables"/>

	<!--
	Adapters 	
	<adapter factory=".containers._default_container_adapter"
			 provides=".interfaces.IContainer"
			 for="nti.base.interfaces.IBasestring" />

	<subscriber handler=".discussions._topic_added" />
	<subscriber handler=".discussions._topic_removed" />
	<subscriber handler=".discussions._topic_modified" />
			
	<subscriber handler=".discussions._forum_added" />
	<subscriber handler=".discussions._forum_removed" />
	<subscriber handler=".discussions._forum_modified" />
	
	<subscriber handler=".discussions._add_general_forum_comment" />
	<subscriber handler=".discussions._add_personal_blog_comment" />
	<subscriber handler=".discussions._modify_general_forum_comment" />
	<subscriber handler=".discussions._modify_personal_blog_comment" />
	
	<subscriber handler=".containers._contained_added" />
	<subscriber handler=".containers._contained_removed" />
	<subscriber handler=".containers._contained_modified" />


	Utilities

	<utility component=".containers" provides=".interfaces.IObjectProcessor" name="containers"/>
	
	<utility component=".discussions" provides=".interfaces.IObjectProcessor" name="discussions"/>

	-->

	<!-- Graph Queue Processor -->
	<include package="." file="meta.zcml" />
	<configure zcml:condition="have testmode">
		<gdb:registerImmediateProcessingQueue />
	</configure>

	<configure zcml:condition="not-have testmode">
		<gdb:registerRedisProcessingQueue />
	</configure>

	<!-- Graph Store -->
	<configure zcml:condition="have testmode">
		<gdb:registerGraphDB />
	</configure>

</configure>

